<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="466.47906"
   height="96.669067"
   viewBox="0 0 123.42252 25.577025"
   version="1.1"
   id="svg5"
   inkscape:version="1.1 (c68e22c387, 2021-05-23)"
   sodipodi:docname="lotus_logo2.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview7"
     pagecolor="#505050"
     bordercolor="#eeeeee"
     borderopacity="1"
     inkscape:pageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="0"
     inkscape:document-units="px"
     showgrid="false"
     units="px"
     inkscape:zoom="1.4142136"
     inkscape:cx="94.045202"
     inkscape:cy="105.00536"
     inkscape:window-width="1858"
     inkscape:window-height="1057"
     inkscape:window-x="54"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="g6453"
     width="477.31897px"
     fit-margin-top="5"
     fit-margin-left="10"
     fit-margin-right="10"
     fit-margin-bottom="5" />
  <defs
     id="defs2">
    <linearGradient
       inkscape:collect="always"
       id="linearGradient17533">
      <stop
         style="stop-color:#5da68b;stop-opacity:1"
         offset="0"
         id="stop17529" />
      <stop
         style="stop-color:#acc59e;stop-opacity:1"
         offset="1"
         id="stop17531" />
    </linearGradient>
    <linearGradient
       inkscape:collect="always"
       id="linearGradient4862">
      <stop
         style="stop-color:#bf4953;stop-opacity:1"
         offset="0"
         id="stop4858" />
      <stop
         style="stop-color:#ebcad5;stop-opacity:1"
         offset="1"
         id="stop4860" />
    </linearGradient>
    <linearGradient
       inkscape:collect="always"
       id="linearGradient3850">
      <stop
         style="stop-color:#5da68b;stop-opacity:1"
         offset="0"
         id="stop3846" />
      <stop
         style="stop-color:#ebcad5;stop-opacity:0.9628253"
         offset="1"
         id="stop3848" />
    </linearGradient>
    <rect
       x="260.33258"
       y="455.12689"
       width="316.76831"
       height="205.71735"
       id="rect16024" />
    <rect
       x="294.79016"
       y="386.18796"
       width="196.95586"
       height="54.066315"
       id="rect3736" />
    <rect
       x="144.17683"
       y="373.31503"
       width="386.18796"
       height="168.63541"
       id="rect2168" />
    <path
       d="M 10,320 C 10,148.9 148.9,10 320,10 491.09,10 630,148.9 630,320 630,491.09 491.09,630 320,630 148.9,630 10,491.09 10,320 Z"
       id="dfkJ6go2H" />
    <path
       d=""
       id="a2MfxfRzhy" />
    <path
       d="m 307.7,20.49 -6.04,0.62 -5.98,0.85 -5.89,1.09 -5.82,1.31 -5.73,1.53 -5.63,1.76 -5.54,1.97 -5.43,2.17 -5.33,2.38 -5.22,2.58 -5.1,2.77 -4.98,2.96 -4.85,3.15 -4.72,3.32 -4.59,3.5 -4.45,3.67 -4.3,3.84 -4.15,3.99 -3.99,4.15 -3.83,4.3 -3.67,4.45 -3.5,4.58 -3.33,4.72 -3.14,4.86 -2.97,4.98 -2.77,5.1 -2.58,5.21 -2.37,5.33 -2.18,5.44 -1.97,5.54 -1.75,5.63 -1.54,5.73 -1.31,5.81 -1.09,5.9 -0.85,5.97 -0.61,6.05 -0.38,6.12 -0.12,6.18 0.12,6.18 0.38,6.11 0.61,6.05 0.85,5.97 1.09,5.9 1.31,5.81 1.54,5.73 1.75,5.64 1.97,5.53 2.18,5.44 2.37,5.33 2.58,5.22 2.77,5.1 2.97,4.97 3.14,4.86 3.33,4.72 3.5,4.59 3.67,4.44 3.83,4.3 3.99,4.15 4.15,4 4.3,3.83 4.45,3.67 4.59,3.5 4.72,3.32 4.85,3.15 4.98,2.96 5.1,2.77 5.22,2.58 5.33,2.38 5.43,2.18 5.54,1.96 5.63,1.76 5.73,1.53 5.82,1.32 5.89,1.08 5.98,0.85 6.04,0.62 6.12,0.37 6.18,0.13 v 0 0 l 6.18,0.13 6.12,0.37 6.04,0.62 5.98,0.85 5.9,1.08 5.81,1.32 5.73,1.53 5.63,1.76 5.54,1.96 5.44,2.18 5.32,2.38 5.22,2.58 5.1,2.77 4.98,2.96 4.85,3.15 4.73,3.32 4.58,3.5 4.45,3.67 4.3,3.83 4.15,4 3.99,4.15 3.84,4.3 3.67,4.44 3.49,4.59 3.33,4.72 3.15,4.85 2.96,4.98 2.77,5.1 2.58,5.22 2.38,5.33 2.17,5.44 1.97,5.53 1.75,5.64 1.54,5.73 1.31,5.81 1.09,5.9 0.85,5.97 0.61,6.05 0.38,6.11 0.12,6.18 -0.12,6.18 -0.38,6.12 -0.61,6.05 -0.85,5.97 -1.09,5.9 -1.31,5.81 -1.54,5.73 -1.75,5.63 -1.97,5.54 -2.17,5.44 -2.38,5.33 -2.58,5.21 -2.77,5.1 -2.96,4.98 -3.15,4.86 -3.33,4.72 -3.49,4.58 -3.67,4.45 -3.84,4.3 -3.99,4.15 -4.15,3.99 -4.3,3.84 -4.45,3.67 -4.58,3.5 -4.73,3.32 -4.85,3.15 -4.98,2.96 -5.1,2.77 -5.22,2.58 -5.32,2.38 -5.44,2.17 -5.54,1.97 -5.63,1.76 -5.73,1.53 -5.81,1.31 -5.9,1.09 -5.98,0.85 -6.04,0.62 -6.12,0.37 -6.18,0.12 -6.18,-0.12 -0.19,-0.01 -5.99,-0.12 -12.23,-0.75 -12.1,-1.23 -11.95,-1.7 -11.79,-2.17 -11.63,-2.63 -11.45,-3.07 -11.27,-3.51 -11.08,-3.93 -10.87,-4.36 -10.65,-4.75 -10.44,-5.16 -10.2,-5.54 -9.96,-5.93 -9.7,-6.29 -9.45,-6.65 -9.17,-7 -8.89,-7.34 -8.6,-7.66 -8.3,-7.99 -7.99,-8.3 -7.67,-8.6 -7.34,-8.89 -7,-9.18 -6.65,-9.44 -6.29,-9.71 -5.92,-9.95 L 53.51,457.81 48.35,447.38 43.59,436.72 39.24,425.85 35.3,414.78 31.8,403.51 28.72,392.05 26.1,380.42 23.93,368.63 22.22,356.68 20.99,344.59 20.25,332.35 20,320 l 0.25,-12.36 0.74,-12.23 1.23,-12.1 1.71,-11.95 2.17,-11.79 2.62,-11.63 3.08,-11.46 3.5,-11.26 3.94,-11.08 4.35,-10.87 4.76,-10.66 5.16,-10.43 5.54,-10.2 5.92,-9.96 6.29,-9.71 6.65,-9.44 7,-9.17 7.34,-8.9 7.67,-8.6 7.99,-8.29 8.3,-7.99 8.6,-7.67 8.89,-7.34 9.17,-7 9.45,-6.65 9.7,-6.29 9.96,-5.92 10.2,-5.55 10.44,-5.15 10.65,-4.76 10.87,-4.35 11.08,-3.94 11.27,-3.51 11.45,-3.07 11.63,-2.62 11.79,-2.17 11.95,-1.71 12.1,-1.23 12.23,-0.74 L 320,20 l -6.18,0.12 z"
       id="a9QqGcsbUR" />
    <path
       d="m 307.7,319.5 -6.04,-0.62 -5.98,-0.85 -5.89,-1.08 -5.82,-1.32 -5.73,-1.53 -5.63,-1.76 -5.54,-1.96 -5.43,-2.18 -5.33,-2.38 -5.22,-2.58 -5.1,-2.77 -4.98,-2.96 -4.85,-3.15 -4.72,-3.32 -4.59,-3.5 -4.45,-3.67 -4.3,-3.83 -4.15,-4 -3.99,-4.15 -3.83,-4.3 -3.67,-4.44 -3.5,-4.59 -3.33,-4.72 -3.14,-4.86 -2.96,-4.97 -2.78,-5.1 -2.58,-5.22 -2.37,-5.33 -2.18,-5.44 -1.97,-5.53 -1.75,-5.64 -1.54,-5.73 -1.31,-5.81 -1.09,-5.9 -0.85,-5.97 -0.61,-6.05 -0.38,-6.12 -0.12,-6.17 0.12,-6.18 0.38,-6.12 0.61,-6.05 0.85,-5.97 1.09,-5.9 1.31,-5.81 1.54,-5.73 1.75,-5.63 1.97,-5.54 2.18,-5.44 2.37,-5.33 2.58,-5.21 2.78,-5.1 2.96,-4.98 3.14,-4.86 3.33,-4.72 3.5,-4.58 3.67,-4.45 3.83,-4.3 3.99,-4.15 4.15,-3.99 4.3,-3.84 4.45,-3.67 4.59,-3.5 4.72,-3.32 4.85,-3.15 4.98,-2.96 5.1,-2.77 5.22,-2.58 5.33,-2.38 5.43,-2.17 5.54,-1.97 5.63,-1.76 5.73,-1.53 5.82,-1.31 5.89,-1.09 5.98,-0.85 6.04,-0.62 6.12,-0.37 6.18,-0.12 6.18,0.12 v 0 l 6.18,0.13 12.23,0.74 12.09,1.23 11.95,1.71 11.8,2.17 11.63,2.62 11.45,3.07 11.27,3.51 11.08,3.94 10.87,4.35 10.65,4.76 10.44,5.15 10.2,5.55 9.96,5.92 9.7,6.29 9.45,6.65 9.17,7 8.89,7.34 8.6,7.67 8.3,7.99 7.99,8.29 7.67,8.6 7.34,8.9 6.99,9.17 6.65,9.44 6.3,9.71 5.92,9.96 5.54,10.2 5.16,10.43 4.76,10.66 4.35,10.87 3.93,11.08 3.51,11.26 3.07,11.46 2.63,11.63 2.17,11.79 1.7,11.95 1.23,12.1 0.75,12.23 0.25,12.36 -0.25,12.35 -0.75,12.24 -1.23,12.09 -1.7,11.95 -2.17,11.79 -2.63,11.63 -3.07,11.46 -3.51,11.27 -3.93,11.07 -4.35,10.87 -4.76,10.66 -5.16,10.43 -5.54,10.21 -5.92,9.95 -6.3,9.71 -6.65,9.44 -6.99,9.18 -7.34,8.89 -7.67,8.6 -7.99,8.3 -8.3,7.98 -8.6,7.67 -8.89,7.34 -9.17,7 -9.45,6.65 -9.7,6.29 -9.96,5.93 -10.2,5.54 -10.44,5.16 -10.65,4.75 -10.87,4.36 -11.08,3.93 -11.27,3.51 -11.45,3.07 -11.63,2.63 -11.8,2.17 -11.95,1.7 -12.09,1.23 -12.23,0.75 -12.36,0.25 6.18,-0.13 6.11,-0.37 6.05,-0.62 5.98,-0.85 5.89,-1.08 5.82,-1.32 5.72,-1.53 5.64,-1.76 5.54,-1.96 5.43,-2.18 5.33,-2.38 5.22,-2.58 5.1,-2.77 4.98,-2.96 4.85,-3.15 4.72,-3.32 4.59,-3.5 4.44,-3.67 4.3,-3.83 4.15,-4 4,-4.15 3.83,-4.3 3.67,-4.44 3.5,-4.59 3.33,-4.72 3.14,-4.86 2.96,-4.97 2.78,-5.1 2.57,-5.22 2.38,-5.33 2.18,-5.44 1.97,-5.53 1.75,-5.64 1.54,-5.73 1.31,-5.81 1.08,-5.9 0.86,-5.97 0.61,-6.05 0.37,-6.12 0.13,-6.17 -0.13,-6.18 -0.37,-6.12 -0.61,-6.05 -0.86,-5.97 -1.08,-5.9 -1.31,-5.81 -1.54,-5.73 -1.75,-5.63 -1.97,-5.54 -2.18,-5.44 -2.38,-5.33 -2.57,-5.21 -2.78,-5.1 -2.96,-4.98 -3.14,-4.86 -3.33,-4.72 -3.5,-4.58 -3.67,-4.45 -3.83,-4.3 -4,-4.15 -4.15,-3.99 -4.3,-3.84 -4.44,-3.67 -4.59,-3.5 -4.72,-3.32 -4.85,-3.15 -4.98,-2.96 -5.1,-2.77 -5.22,-2.58 -5.33,-2.38 -5.43,-2.17 -5.54,-1.97 -5.64,-1.76 -5.72,-1.53 -5.82,-1.31 -5.89,-1.09 -5.98,-0.85 -6.05,-0.62 -6.11,-0.37 L 320,320 v 0 l -6.18,-0.13 z"
       id="b1fJchOIvG" />
    <path
       d="m 370,170 c 0,27.59 -22.4,50 -50,50 -27.6,0 -50,-22.41 -50,-50 0,-27.6 22.4,-50 50,-50 27.6,0 50,22.4 50,50 z"
       id="b78ARdNRAS" />
    <path
       d="m 370,470 c 0,27.6 -22.41,50 -50,50 -27.6,0 -50,-22.4 -50,-50 0,-27.6 22.4,-50 50,-50 27.59,0 50,22.4 50,50 z"
       id="b1PYNoPQzL" />
    <rect
       x="260.33258"
       y="455.12689"
       width="316.76831"
       height="205.71735"
       id="rect1508" />
    <meshgradient
       inkscape:collect="always"
       id="meshgradient1724"
       gradientUnits="userSpaceOnUse"
       x="-176.36598"
       y="-31.271975">
      <meshrow
         id="meshrow1726">
        <meshpatch
           id="meshpatch1728">
          <stop
             path="c 54.6805,0  109.361,0  164.042,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop1730" />
          <stop
             path="c 0,54.6805  0,109.361  0,164.042"
             style="stop-color:#000000;stop-opacity:1"
             id="stop1732" />
          <stop
             path="c -54.6805,0  -109.361,0  -164.042,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop1734" />
          <stop
             path="c 0,-54.6805  0,-109.361  0,-164.042"
             style="stop-color:#000000;stop-opacity:1"
             id="stop1736" />
        </meshpatch>
      </meshrow>
    </meshgradient>
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3850"
       id="linearGradient3852"
       x1="-11.239673"
       y1="-34.400215"
       x2="-119.54928"
       y2="61.647923"
       gradientUnits="userSpaceOnUse" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4862"
       id="linearGradient4864"
       x1="45.424477"
       y1="8305.2627"
       x2="12791.804"
       y2="86.443733"
       gradientUnits="userSpaceOnUse" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4862"
       id="linearGradient5266"
       gradientUnits="userSpaceOnUse"
       x1="45.424477"
       y1="8305.2627"
       x2="12791.804"
       y2="86.443733" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4862"
       id="linearGradient5268"
       gradientUnits="userSpaceOnUse"
       x1="45.424477"
       y1="8305.2627"
       x2="12791.804"
       y2="86.443733" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4862"
       id="linearGradient5270"
       gradientUnits="userSpaceOnUse"
       x1="45.424477"
       y1="8305.2627"
       x2="12791.804"
       y2="86.443733" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4862"
       id="linearGradient5272"
       gradientUnits="userSpaceOnUse"
       x1="45.424477"
       y1="8305.2627"
       x2="12791.804"
       y2="86.443733" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4862"
       id="linearGradient5274"
       gradientUnits="userSpaceOnUse"
       x1="45.424477"
       y1="8305.2627"
       x2="12791.804"
       y2="86.443733" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4862"
       id="linearGradient5276"
       gradientUnits="userSpaceOnUse"
       x1="45.424477"
       y1="8305.2627"
       x2="12791.804"
       y2="86.443733" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4862"
       id="linearGradient5278"
       gradientUnits="userSpaceOnUse"
       x1="45.424477"
       y1="8305.2627"
       x2="12791.804"
       y2="86.443733" />
    <rect
       x="260.33258"
       y="455.12689"
       width="316.76831"
       height="205.71735"
       id="rect6455" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient17533"
       id="linearGradient17535"
       x1="229.00224"
       y1="185.87408"
       x2="228.24365"
       y2="195.7805"
       gradientUnits="userSpaceOnUse" />
  </defs>
  <g
     inkscape:groupmode="layer"
     id="layer2"
     inkscape:label="レイヤー 2"
     style="display:inline;mix-blend-mode:normal"
     transform="translate(-10.0676,19.542689)">
    <g
       id="g11128"
       transform="translate(2.3321444,-24.820071)">
      <g
         transform="matrix(0.00272166,0,0,-0.00272166,43.707504,29.24451)"
         fill="#000000"
         stroke="none"
         id="g1492"
         style="display:inline;fill:url(#linearGradient4864);fill-opacity:1">
        <path
           d="m 6292,8153 c -168,-285 -349,-609 -550,-983 -89,-166 -257,-564 -322,-762 -12,-38 -25,-68 -28,-68 -4,0 -50,37 -102,81 -287,246 -654,486 -996,654 -181,89 -454,199 -464,188 -11,-11 -28,-191 -41,-428 -19,-341 2,-709 56,-980 13,-65 23,-121 21,-122 -2,-2 -36,12 -77,31 -277,128 -926,354 -1443,502 -104,30 -197,54 -206,54 -27,0 -45,-110 -45,-265 1,-153 16,-222 75,-340 65,-130 72,-136 265,-214 271,-109 488,-225 639,-343 28,-21 29,-21 22,-3 -4,11 -21,56 -38,100 -16,44 -47,117 -68,163 -31,65 -36,82 -22,77 9,-4 62,-23 117,-42 699,-244 1568,-667 2135,-1037 80,-52 146,-93 148,-91 2,2 12,37 22,78 25,99 114,338 211,568 91,214 365,728 609,1144 149,254 185,315 190,315 3,0 14,-17 26,-38 12,-20 66,-114 121,-208 225,-383 517,-917 597,-1092 80,-176 167,-397 232,-587 31,-93 60,-173 64,-178 3,-4 55,25 115,64 641,417 1371,765 2170,1035 87,30 164,54 170,54 5,0 -41,-102 -102,-227 -62,-126 -113,-231 -113,-236 0,-4 36,22 81,57 114,90 306,203 573,336 227,114 231,117 283,180 61,75 161,268 198,385 23,70 75,303 75,334 0,17 -14,15 -256,-50 -693,-184 -1348,-386 -1586,-489 -50,-22 -92,-39 -94,-37 -1,1 9,52 21,112 71,334 83,821 33,1313 -10,107 -12,112 -32,106 -78,-23 -301,-118 -454,-193 -364,-180 -700,-401 -1007,-664 -55,-48 -103,-83 -106,-79 -4,4 -25,61 -49,127 -83,234 -177,460 -270,645 -156,313 -670,1220 -692,1220 -4,0 -52,-75 -106,-167 z"
           id="path1478"
           style="fill:url(#linearGradient5266);fill-opacity:1" />
        <path
           d="m 6341,5584 c -201,-335 -501,-880 -612,-1109 -94,-195 -209,-486 -278,-699 -345,-1070 -214,-1874 384,-2341 143,-112 314,-204 493,-266 l 82,-29 98,36 c 254,95 458,228 634,412 459,483 531,1253 207,2225 -66,200 -179,484 -261,657 -106,224 -576,1065 -672,1202 -10,14 -21,2 -75,-88 z"
           id="path1480"
           style="fill:url(#linearGradient5268);fill-opacity:1" />
        <path
           d="m 75,5478 c 28,-23 84,-76 125,-118 222,-227 405,-598 531,-1075 206,-782 701,-1435 1404,-1854 173,-103 281,-157 467,-234 241,-100 529,-184 758,-222 52,-8 111,-18 130,-21 33,-6 31,-2 -70,103 -307,318 -474,731 -552,1363 -15,119 -18,662 -5,832 l 8,107 -133,134 c -150,151 -315,278 -505,392 -514,308 -1227,526 -2003,615 -96,11 -182,20 -190,20 -8,-1 8,-19 35,-42 z"
           id="path1482"
           style="fill:url(#linearGradient5270);fill-opacity:1" />
        <path
           d="m 12650,5513 c -842,-84 -1622,-320 -2158,-652 -181,-113 -297,-205 -456,-363 -124,-123 -147,-151 -143,-170 15,-61 29,-420 23,-593 -17,-515 -105,-915 -277,-1260 -84,-171 -174,-299 -296,-425 -51,-52 -93,-96 -93,-97 0,-1 17,1 38,4 616,87 1221,342 1692,714 130,103 335,302 447,434 46,55 130,170 187,255 213,318 332,587 447,1015 73,272 206,577 340,780 70,106 224,275 309,338 l 35,27 -30,-2 c -16,-1 -46,-3 -65,-5 z"
           id="path1484"
           style="fill:url(#linearGradient5272);fill-opacity:1" />
        <path
           d="m 3110,4696 c 0,-3 9,-20 20,-38 57,-98 66,-249 42,-753 -31,-654 58,-1117 305,-1585 277,-524 657,-828 1172,-937 114,-25 146,-27 346,-27 192,-1 235,2 338,23 64,13 117,24 117,26 0,2 -36,38 -80,80 -237,231 -380,576 -431,1040 -24,218 -13,614 23,852 10,67 9,78 -12,135 -70,193 -265,402 -555,595 -278,185 -653,366 -1083,523 -199,72 -202,73 -202,66 z"
           id="path1486"
           style="fill:url(#linearGradient5274);fill-opacity:1" />
        <path
           d="m 9460,4631 c -260,-95 -386,-149 -607,-256 -566,-275 -905,-552 -1026,-839 l -30,-71 19,-155 c 29,-236 27,-732 -4,-920 -66,-403 -188,-673 -403,-894 -48,-49 -87,-91 -85,-93 6,-6 150,-32 239,-44 140,-17 402,-7 542,21 542,107 936,435 1220,1015 221,450 300,876 273,1470 -6,121 -11,312 -12,425 -1,221 7,280 50,359 26,48 27,51 17,51 -5,0 -91,-31 -193,-69 z"
           id="path1488"
           style="fill:url(#linearGradient5276);fill-opacity:1" />
        <path
           d="M 845,2925 C 452,2867 155,2758 27,2622 l -29,-30 79,-67 c 175,-150 393,-270 667,-369 16,-5 6,-15 -53,-56 -106,-73 -177,-130 -258,-204 -72,-67 -179,-185 -172,-189 2,-2 49,0 104,3 160,10 692,-23 713,-44 3,-3 -42,-54 -99,-113 C 874,1445 786,1340 716,1243 l -37,-52 53,-15 c 672,-193 1360,-192 1933,3 49,17 94,31 98,31 5,0 -8,-19 -28,-42 -21,-24 -76,-89 -122,-145 -87,-104 -135,-143 -234,-186 -54,-24 -208,-75 -299,-98 l -45,-12 40,-14 c 22,-7 103,-29 180,-48 675,-166 1477,-159 2367,19 l 207,41 43,-59 c 61,-84 199,-222 293,-293 244,-182 502,-290 840,-349 144,-26 505,-26 670,0 528,81 945,314 1225,685 l 25,33 142,-31 c 945,-207 1889,-214 2582,-19 127,36 128,33 -24,74 -119,32 -237,81 -305,124 -31,20 -93,85 -170,176 -66,79 -117,144 -112,144 4,0 48,-14 97,-31 538,-182 1157,-196 1796,-38 89,21 167,43 174,47 23,12 -128,204 -298,378 l -98,102 43,6 c 216,31 705,52 766,32 13,-4 22,-3 22,3 0,5 -51,61 -112,124 -111,111 -258,233 -345,284 -25,14 -41,29 -36,33 4,4 53,24 108,45 207,78 401,191 563,327 l 84,70 -29,30 c -105,111 -351,215 -643,272 -111,22 -272,46 -307,46 -6,0 -28,-28 -49,-62 -141,-232 -546,-618 -894,-851 -291,-196 -721,-332 -1154,-367 -168,-13 -250,-13 -337,2 -67,12 -71,11 -82,-7 -35,-64 -199,-207 -357,-312 -326,-218 -722,-358 -1150,-408 -147,-18 -418,-20 -475,-4 -37,10 -41,9 -54,-12 -94,-151 -340,-244 -742,-280 -346,-32 -904,83 -1079,221 -38,30 -38,30 -168,30 -574,0 -1074,155 -1482,459 -98,73 -258,228 -290,281 -25,40 -26,41 -70,35 -215,-28 -543,-2 -813,65 -213,53 -465,151 -621,240 -110,63 -384,272 -523,399 -165,150 -361,366 -436,478 -70,105 -55,99 -202,78 z"
           id="path1490"
           style="fill:url(#linearGradient5278);fill-opacity:1" />
      </g>
      <g
         id="g1333"
         transform="matrix(0.07920538,0,0,0.07920538,68.625991,19.004806)"
         style="fill:url(#meshgradient1724);fill-opacity:1">
        <path
           id="use845-0"
           style="fill:url(#linearGradient3852);fill-opacity:1;stroke-width:0.264583"
           d="m -94.345161,-31.271974 c -45.270199,0 -82.020819,36.7506174 -82.020819,82.020817 0,45.267553 36.75062,82.020817 82.020819,82.020817 45.267554,0 82.020817,-36.753264 82.020817,-82.020817 0,-45.2701996 -36.753263,-82.020817 -82.020817,-82.020817 z m 0,29.1041606 c 7.302499,0 13.229164,5.9266654 13.229164,13.2291644 0,7.299852 -5.926665,13.229164 -13.229164,13.229164 -7.302499,0 -13.229159,-5.929312 -13.229159,-13.229164 0,-7.302499 5.92666,-13.2291644 13.229159,-13.2291644 z" />
        <path
           id="use859-3"
           style="fill:#ffffff;fill-opacity:1;stroke-width:0.264583"
           d="m -94.345161,-28.626141 -1.635042,0.03204 -0.02585,0.0016 z m -1.660881,0.03359 -1.609204,0.03255 -3.235974,0.195856 -3.20136,0.325561 -3.16208,0.452684 -3.11919,0.574127 -3.07733,0.692981 -3.02927,0.812352 -2.98173,0.928624 -2.9316,1.042315 -2.87631,1.150834 -2.8174,1.259872 -2.76262,1.362188 -2.69854,1.468644 -2.6355,1.566315 -2.56625,1.664496 -2.50011,1.759066 -2.42621,1.852083 -2.35231,1.9419985 -2.27531,2.0293326 -2.19625,2.1140839 -2.11408,2.1936627 -2.02933,2.27531298 -1.942,2.35489442 -1.85209,2.4262101 -1.75958,2.4975207 -1.66398,2.5693523 -1.56631,2.6349798 -1.46606,2.699059 -1.36529,2.759521 -1.25936,2.820501 -1.15083,2.875792 -1.04231,2.931604 -0.92605,2.979145 -0.81493,3.032372 -0.6935,3.076814 -0.57412,3.119706 -0.45217,3.161563 -0.32557,3.201355 -0.19585,3.235977 -0.0661,3.270084 0.0661,3.268017 0.19585,3.238045 0.32557,3.199287 0.45217,3.161564 0.57412,3.119188 0.6935,3.077331 0.81493,3.032373 0.92605,2.981729 1.04231,2.92902 1.15083,2.875794 1.25936,2.820497 1.36529,2.759522 1.46606,2.701644 1.56631,2.632397 1.66398,2.56935 1.75958,2.497523 1.85209,2.428791 1.942,2.35232 2.02933,2.27531 2.11408,2.19573 2.19625,2.11408 2.27531,2.02675 2.35231,1.942 2.42621,1.85208 2.50011,1.75959 2.56625,1.66449 2.6355,1.5689 2.69854,1.46554 2.76262,1.36529 2.8174,1.25677 2.87631,1.15394 2.9316,1.03973 2.98173,0.92862 3.02927,0.81236 3.07733,0.69556 3.11919,0.57413 3.16208,0.45009 3.20136,0.32504 3.235974,0.19845 1.584918,0.032 0.05012,0.003 1.635042,0.0315 1.635043,-0.0315 1.619538,-0.0977 1.597834,-0.16433 1.582333,-0.22479 1.561144,-0.28836 1.537375,-0.34675 1.515668,-0.40462 1.489831,-0.46561 1.465545,-0.5214 1.439704,-0.57413 1.407149,-0.62993 1.38131,-0.68265 1.349272,-0.73277 1.317749,-0.7829 1.283125,-0.83354 1.251604,-0.8785 1.211812,-0.92604 1.177189,-0.971 1.137915,-1.01597 1.098124,-1.05575 1.055748,-1.09812 1.01596,-1.1374 0.970999,-1.17771 0.923457,-1.21181 0.881083,-1.2485 0.833025,-1.28623 0.783415,-1.31723 0.732772,-1.34979 0.682646,-1.37821 0.629935,-1.41024 0.574125,-1.4392 0.520898,-1.46605 0.463021,-1.48932 0.407725,-1.516181 0.34675,-1.537371 0.288353,-1.561148 0.224793,-1.579228 0.161232,-1.600938 0.100769,-1.619022 0.03152,-1.635559 -0.03152,-1.635043 -0.100769,-1.616437 -0.161232,-1.600935 -0.224793,-1.579231 -0.288353,-1.561145 -0.34675,-1.537374 -0.407725,-1.516186 -0.463021,-1.491898 -0.520898,-1.463477 -0.574125,-1.439188 -0.629935,-1.41025 -0.682646,-1.381311 -0.732772,-1.349271 -0.783415,-1.317232 -0.833025,-1.283642 -0.881083,-1.248502 -0.923457,-1.214396 -0.970999,-1.175122 -1.01596,-1.137398 -1.055748,-1.098124 -1.098124,-1.058333 -1.137915,-1.013375 -1.177189,-0.971 -1.211812,-0.926041 -1.251604,-0.878499 -1.283125,-0.833541 -1.317749,-0.782898 -1.349272,-0.732772 -1.38131,-0.682645 -1.407149,-0.629936 -1.439704,-0.576709 -1.465545,-0.518831 -1.489831,-0.465605 -1.515668,-0.404626 -1.537375,-0.349333 -1.561144,-0.28577 -1.582333,-0.224793 -1.597834,-0.164331 -1.619538,-0.09767 -1.635043,-0.03462 -1.635042,-0.03411 -1.619022,-0.09818 -1.598353,-0.163814 -1.582327,-0.224793 -1.55804,-0.28577 -1.53996,-0.349333 -1.51619,-0.404626 -1.48983,-0.466122 -1.46554,-0.518314 -1.43661,-0.576709 -1.41024,-0.629936 -1.38132,-0.682645 -1.34927,-0.732772 -1.31775,-0.782898 -1.28312,-0.83354 -1.24902,-0.878499 -1.2144,-0.926042 -1.17719,-0.971 -1.13791,-1.013374 -1.09761,-1.058334 -1.05576,-1.098123 -1.01336,-1.137915 -0.97101,-1.174605 -0.92604,-1.214396 -0.88109,-1.249019 -0.83094,-1.28571 -0.786,-1.314648 -0.73277,-1.349788 -0.68265,-1.380794 -0.62683,-1.41025 -0.57671,-1.439706 -0.52142,-1.462958 -0.46302,-1.492416 -0.40773,-1.515668 -0.34623,-1.537374 -0.28835,-1.561145 -0.22531,-1.579747 -0.16123,-1.60042 -0.10025,-1.616439 -0.032,-1.635559 0.032,-1.6350426 0.10025,-1.6190221 0.16123,-1.6009352 0.22531,-1.5792315 0.28835,-1.5611445 0.34623,-1.5373718 0.40773,-1.51618651 0.46302,-1.48931549 0.52142,-1.4660612 0.57671,-1.4391876 0.62683,-1.41025 0.68265,-1.378725 0.73277,-1.3492715 0.786,-1.3172331 0.83095,-1.2862269 0.88109,-1.248502 0.92604,-1.21181 0.971,-1.177708 1.01337,-1.137396 1.05575,-1.098126 1.09761,-1.055748 1.13791,-1.015958 1.17719,-0.971002 1.2144,-0.926041 1.24902,-0.878499 1.28312,-0.83354 1.31775,-0.782897 1.34927,-0.73329 1.38132,-0.682646 1.41024,-0.629417 1.43661,-0.574125 1.46554,-0.521417 1.48983,-0.465603 1.51619,-0.404627 1.53996,-0.34675 1.55804,-0.288353 1.582327,-0.224793 1.598353,-0.16433 z m 1.660881,105.799721 c 7.299853,0 13.229164,5.926665 13.229164,13.229164 0,7.302498 -5.929311,13.229166 -13.229164,13.229166 -7.302499,0 -13.229159,-5.926668 -13.229159,-13.229166 0,-7.302499 5.92666,-13.229164 13.229159,-13.229164 z" />
      </g>
    </g>
  </g>
  <g
     inkscape:label="Asian"
     inkscape:groupmode="layer"
     id="layer1"
     transform="translate(-135.26061,-170.33645)"
     style="display:inline">
    <text
       xml:space="preserve"
       transform="scale(0.26458333)"
       id="text16022"
       style="font-style:normal;font-weight:normal;font-size:40px;line-height:1.25;font-family:sans-serif;white-space:pre;shape-inside:url(#rect16024);fill:#000000;fill-opacity:1;stroke:none" />
    <rect
       style="fill:none;stroke:none;stroke-width:0.264583"
       id="rect1064"
       width="139.81479"
       height="39.338875"
       x="120.76526"
       y="185.28108" />
    <g
       id="g857"
       transform="matrix(0.26458328,0,0,0.26458328,-123.47074,101.29563)">
      <g
         id="g855">
        <use
           xlink:href="#a2MfxfRzhy"
           opacity="1"
           fill-opacity="0"
           stroke="#000000"
           stroke-width="1"
           stroke-opacity="1"
           id="use853"
           x="0"
           y="0"
           width="100%"
           height="100%" />
      </g>
    </g>
    <g
       id="g881"
       transform="matrix(0.26458328,0,0,0.26458328,-123.47074,101.29563)" />
  </g>
  <g
     inkscape:label="Historia"
     inkscape:groupmode="layer"
     id="g6453"
     transform="translate(-135.26061,-170.33645)"
     style="display:inline">
    <text
       xml:space="preserve"
       transform="scale(0.26458333)"
       id="text6437"
       style="font-style:normal;font-weight:normal;font-size:40px;line-height:1.25;font-family:sans-serif;white-space:pre;shape-inside:url(#rect6455);fill:#000000;fill-opacity:1;stroke:none" />
    <g
       id="g17443"
       style="fill-opacity:1;fill:url(#linearGradient17535)">
      <text
         xml:space="preserve"
         style="display:inline;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:19.7216px;line-height:1.25;font-family:Candara;-inkscape-font-specification:'Candara, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:url(#linearGradient17535);fill-opacity:1.0;stroke:none;stroke-width:0.493043"
         x="137.81015"
         y="194.33922"
         id="text19176"><tspan
           sodipodi:role="line"
           id="tspan19174"
           style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:19.7216px;font-family:Candara;-inkscape-font-specification:'Candara, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:url(#linearGradient17535);fill-opacity:1.0;stroke-width:0.493043"
           x="137.81015"
           y="194.33922">Asian</tspan></text>
      <text
         xml:space="preserve"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:19.506px;line-height:1.25;font-family:Candara;-inkscape-font-specification:'Candara, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:url(#linearGradient17535);fill-opacity:1.0;stroke:none;stroke-width:0.48765"
         x="194.7829"
         y="194.215"
         id="text6441"><tspan
           sodipodi:role="line"
           id="tspan6439"
           style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:19.7216px;font-family:Candara;-inkscape-font-specification:'Candara, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:url(#linearGradient17535);fill-opacity:1.0;stroke-width:0.48765"
           x="194.7829"
           y="194.215">Historia</tspan></text>
    </g>
    <rect
       style="fill:none;stroke:none;stroke-width:0.264583"
       id="rect6443"
       width="139.81479"
       height="39.338875"
       x="120.76526"
       y="185.28108" />
    <g
       id="g6449"
       transform="matrix(0.26458328,0,0,0.26458328,-123.47074,101.29563)">
      <g
         id="g6447">
        <use
           xlink:href="#a2MfxfRzhy"
           opacity="1"
           fill-opacity="0"
           stroke="#000000"
           stroke-width="1"
           stroke-opacity="1"
           id="use6445"
           x="0"
           y="0"
           width="100%"
           height="100%" />
      </g>
    </g>
    <g
       id="g6451"
       transform="matrix(0.26458328,0,0,0.26458328,-123.47074,101.29563)" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
